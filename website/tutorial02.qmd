---
title: "WrightMap Tutorial - Part 2"
subtitle: "Plotting Items in Different Ways"
author: "David Torres Irribarra & Rebecca Freund"
date: "09/25/2024"
toc: true
format: html
editor: visual
lightbox: true
---

```{r, include=FALSE, message=FALSE}
# Set the CRAN mirror to avoid errors when installing packages
options(repos = c(CRAN = "https://cloud.r-project.org"))

# Silently load the WrightMap package
if (!requireNamespace("WrightMap", quietly = TRUE)) {
  install.packages("WrightMap")
}
library(WrightMap)
```

## Plotting the Items in Different Ways
###### Updated September 2024 for changes in version 1.4.

### Setup

We start by creating mock person and item estimates.

For the person proficiencies, we create a matrix with 1000 values per dimension (5 dimensions in total).

```{r}
set.seed(2020)
mdim.sim.thetas <- matrix(rnorm(5000), ncol = 5)
```

### Dealing with Many, Many Items

What happens if you have too many items?

```{r}
rasch2.sim.thresholds <- runif(50, -3, 3)
```

If we use the defaults...

```{r}
#| label: t02-i09-manyitemsdef
#| dev: ["svg", "png"]
#| fig-cap: ""
#| results: "hide"
#| fig-width: 8
#| fig-height: 5
#| dpi: 300
wrightMap(rnorm(1000), rasch2.sim.thresholds)
```

Things do not look quite right.

WrightMap offers some options...

```{r}

rasch.sim.thetas <- rnorm(1000)
rasch2.sim.thresholds <- runif(10, -3, 3)

```

You can use the `itemClassic` or `itemHist` options for `item.side`.

```{r}
#| label: t02-i10-manyitemsclassic
#| dev: ["svg", "png"]
#| fig-cap: ""
#| results: "hide"
#| fig-width: 8
#| fig-height: 5
#| dpi: 300
wrightMap(rasch.sim.thetas, rasch2.sim.thresholds, item.side = itemClassic, item.prop = .5)
```

```{r}
#| label: t02-i11-manyitemhist
#| dev: ["svg", "png"]
#| fig-cap: ""
#| results: "hide"
#| fig-width: 8
#| fig-height: 5
#| dpi: 300
wrightMap(rasch.sim.thetas, rasch2.sim.thresholds, item.side = itemHist, item.prop = 0.5)
```

Or you can play with the way labels are presented:

```{r}
#| label: t02-i12-manyitem45
#| dev: ["svg", "png"]
#| fig-cap: ""
#| results: "hide"
#| fig-width: 8
#| fig-height: 5
#| dpi: 300
wrightMap(rnorm(1000), rasch2.sim.thresholds, show.thr.lab = FALSE, label.items.srt = 45)
```

```{r}
#| label: t02-i13-manyitem2rows
#| dev: ["svg", "png"]
#| fig-cap: ""
#| results: "hide"
#| fig-width: 8
#| fig-height: 5
#| dpi: 300
wrightMap(rnorm(1000), rasch2.sim.thresholds, show.thr.lab = FALSE, label.items.rows = 2)
```

```{r}
#| label: t02-i14-manyitem3rows
#| dev: ["svg", "png"]
#| fig-cap: ""
#| results: "hide"
#| fig-width: 8
#| fig-height: 5
#| dpi: 300
wrightMap(rnorm(1000), rasch2.sim.thresholds, show.thr.lab = FALSE, label.items = c(1:50), label.items.rows = 3)
```

Or you can get rid of that axis completely.

```{r}
#| label: t02-i15-manyitemnoaxis
#| dev: ["svg", "png"]
#| fig-cap: ""
#| results: "hide"
#| fig-width: 8
#| fig-height: 5
#| dpi: 300
wrightMap(rnorm(1000), rasch2.sim.thresholds, show.thr.sym = FALSE,
    thr.lab.text = paste("I", 1:10, sep = ""), label.items = "", label.items.ticks = FALSE)
```